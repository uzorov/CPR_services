services:

  keycloak-postgres:
    image: library/postgres:${KC_POSTGRES_IMAGE_TAG:-14}
    container_name: ${POSTGRES_CONTAINER_NAME:-postgres}
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: pg_isready -d postgres
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    ports:
      - ${KC_POSTGRES_PORT_MAPPING:-5433}:5432
    deploy:
      resources:
        limits:
          memory: 256M
    networks:
      - cpr_network

  keycloak:
    image: quay.io/keycloak/keycloak:20.0.2
    container_name: keycloak
    volumes:
      - ./cpr-realm.json:/opt/keycloak/data/import/master-realm.json
    command:
      - start --import-realm --auto-build --db postgres --hostname-strict-https false --hostname-strict false --proxy edge --http-enabled true  --spi-user-profile-legacy-user-profile-read-only-attributes *_RES_ACCESS_MODE
    environment:
      KC_DB_URL: jdbc:postgresql://keycloak-postgres:5432/postgres
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KC_DB_SCHEMA: public
      KC_FEATURES: preview
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - 8282:8080
    depends_on:
      keycloak-postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:8080/realms/master"]
      start_period: 10s
      interval: 30s
      retries: 3
      timeout: 5s
    networks:
      - cpr_network


  
      
  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY:-UsEr_y8b-DSq-C2K-t32} 
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY:-y8b-DSq-C2K-t32}
    command: server ~/minio --console-address :9090
    ports:
      - '9090:9090'
      - '9000:9000'
    volumes:
      - minio-data:/minio
    networks:
      - cpr_network

volumes:
  minio-data:

networks:
  cpr_network:
    driver: bridge